{"ast":null,"code":"var _jsxFileName = \"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport { Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport baseUrl from \"../api\";\nimport \"./Components.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TAX_RATE = 0.07;\nconst useStyles = makeStyles({\n  header: {\n    marginLeft: \"2rem\"\n  },\n  root: {\n    width: \"60%\",\n    marginTop: \"50px\",\n    overflowX: \"auto\",\n    marginLeft: \"30px\"\n  },\n  row: {\n    backgroundColor: \"#8fc1e3\"\n  }\n});\n\nconst Account = props => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const classes = useStyles();\n\n  const getMyOrders = async () => {\n    const resp = await fetch(`${baseUrl}/orders/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${props.token}`\n      }\n    });\n    const info = await resp.json();\n    console.log(info);\n    setOrders(info);\n  };\n\n  useEffect(() => {\n    if (!props.user) {\n      return;\n    }\n\n    getMyOrders();\n  }, [props.user]);\n\n  function ccyFormat(num) {\n    return `${Number(num).toFixed(2)}`;\n  }\n\n  let subtotal = 0;\n\n  for (let product of orders) {\n    subtotal = product.price * product.quantity + subtotal;\n  }\n\n  const taxes = subtotal * TAX_RATE;\n  const invoiceTotal = subtotal + taxes;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.header,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Purchased Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: orders && orders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.table,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.row,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Product\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"left\",\n                children: \"Qty.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"@\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: [order.products.map(product => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.product_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: product.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: product.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: ccyFormat(product.price * product.quantity)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this)]\n              }, product.product_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                rowSpan: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                children: \"Total\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: ccyFormat(invoiceTotal)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Account, \"clNAVYlnXsD0sk1dDRQzcRZCBLE=\", false, function () {\n  return [useStyles];\n});\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Account.js"],"names":["Paper","Table","TableBody","TableCell","TableHead","TableRow","useEffect","useState","makeStyles","baseUrl","TAX_RATE","useStyles","header","marginLeft","root","width","marginTop","overflowX","row","backgroundColor","Account","props","orders","setOrders","classes","getMyOrders","resp","fetch","headers","Authorization","token","info","json","console","log","user","ccyFormat","num","Number","toFixed","subtotal","product","price","quantity","taxes","invoiceTotal","map","order","table","products","product_name","product_id","id"],"mappings":"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","sourcesContent":["import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport baseUrl from \"../api\";\nimport \"./Components.css\";\n\nconst TAX_RATE = 0.07;\n\nconst useStyles = makeStyles({\n  header: {\n    marginLeft: \"2rem\",\n  },\n  root: {\n    width: \"60%\",\n    marginTop: \"50px\",\n    overflowX: \"auto\",\n    marginLeft: \"30px\",\n  },\n  row: {\n    backgroundColor: \"#8fc1e3\",\n  },\n});\n\nconst Account = (props) => {\n  const [orders, setOrders] = useState([]);\n  const classes = useStyles();\n\n  const getMyOrders = async () => {\n    const resp = await fetch(`${baseUrl}/orders/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${props.token}`,\n      },\n    });\n    const info = await resp.json();\n    console.log(info);\n    setOrders(info);\n  };\n\n  useEffect(() => {\n    if (!props.user) {\n      return;\n    }\n    getMyOrders();\n  }, [props.user]);\n\n  function ccyFormat(num) {\n    return `${Number(num).toFixed(2)}`;\n  }\n\n  let subtotal = 0;\n\n  for (let product of orders) {\n    subtotal = product.price * product.quantity + subtotal;\n  }\n\n  const taxes = subtotal * TAX_RATE;\n  const invoiceTotal = subtotal + taxes;\n\n  return (\n    <>\n      <div className={classes.header}>\n        <h1>My Account</h1>\n        <h3>Purchased Orders</h3>\n      </div>\n      <Paper className={classes.root}>\n        {orders &&\n          orders.map((order) => (\n            <div key={order.id}>\n              <Table className={classes.table}>\n                <TableHead>\n                  <TableRow className={classes.row}>\n                    <TableCell>Product</TableCell>\n                    <TableCell align=\"left\">Qty.</TableCell>\n                    <TableCell align=\"right\">@</TableCell>\n                    <TableCell align=\"right\">Price</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {order.products.map((product) => {\n                    return (\n                      <TableRow key={product.product_id}>\n                        <TableCell>{product.product_name}</TableCell>\n                        <TableCell>{product.quantity}</TableCell>\n                        <TableCell align=\"right\">{product.price}</TableCell>\n                        <TableCell align=\"right\">\n                          {ccyFormat(product.price * product.quantity)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n                  <TableRow>\n                    <TableCell rowSpan={3} />\n                    <TableCell colSpan={2}>Total</TableCell>\n                    <TableCell align=\"right\">\n                      {ccyFormat(invoiceTotal)}\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              </Table>\n            </div>\n          ))}\n      </Paper>\n    </>\n  );\n};\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}