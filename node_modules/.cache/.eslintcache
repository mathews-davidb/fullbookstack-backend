[{"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/index.js":"1","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/App.js":"2","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/reportWebVitals.js":"3","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Navbar.js":"4","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Cart.js":"5","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Home.js":"6","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Account.js":"7","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Login.js":"8","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/api/index.js":"9","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Register.js":"10","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/AllProducts.js":"11","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Admin.js":"12","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/ProductPage.js":"13","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/ProductCategory.js":"14","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/styles.js":"15","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/SearchResult.js":"16","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Checkout.js":"17","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/CheckoutRedirect.js":"18","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/UpdateProductForm.js":"19"},{"size":690,"mtime":1637187819323,"results":"20","hashOfConfig":"21"},{"size":8284,"mtime":1637283603101,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1635605073439,"results":"23","hashOfConfig":"21"},{"size":10519,"mtime":1637288213670,"results":"24","hashOfConfig":"21"},{"size":9832,"mtime":1637288215116,"results":"25","hashOfConfig":"21"},{"size":1238,"mtime":1638082790989,"results":"26","hashOfConfig":"21"},{"size":4619,"mtime":1637284685629,"results":"27","hashOfConfig":"21"},{"size":4488,"mtime":1637284311138,"results":"28","hashOfConfig":"21"},{"size":70,"mtime":1635613865405,"results":"29","hashOfConfig":"21"},{"size":5902,"mtime":1637284283721,"results":"30","hashOfConfig":"21"},{"size":3059,"mtime":1636817555782,"results":"31","hashOfConfig":"21"},{"size":7024,"mtime":1637278471606,"results":"32","hashOfConfig":"21"},{"size":6977,"mtime":1637330546355,"results":"33","hashOfConfig":"21"},{"size":3529,"mtime":1637284205288,"results":"34","hashOfConfig":"21"},{"size":1646,"mtime":1636511987838,"results":"35","hashOfConfig":"21"},{"size":2658,"mtime":1636831362063,"results":"36","hashOfConfig":"21"},{"size":11804,"mtime":1637292357770,"results":"37","hashOfConfig":"21"},{"size":5923,"mtime":1637284582848,"results":"38","hashOfConfig":"21"},{"size":4933,"mtime":1637280014181,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"1g3dfu9",{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"43"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"43"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/index.js",["94"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["95","96"],"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/App.js",["97","98","99","100","101","102","103","104","105"],"import { Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Route, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { ToastContainer, toast, Slide } from \"react-toastify\";\nimport baseUrl from \"./api\";\nimport \"./App.css\";\nimport Account from \"./components/Account\";\nimport Admin from \"./components/Admin\";\nimport AllProducts from \"./components/AllProducts\";\nimport Cart from \"./components/Cart\";\nimport CheckoutForm from \"./components/Checkout\";\nimport CheckoutRedirect from \"./components/CheckoutRedirect\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Navbar from \"./components/Navbar\";\nimport ProductCategory from \"./components/ProductCategory\";\nimport ProductPage from \"./components/ProductPage\";\nimport Register from \"./components/Register\";\nimport SearchResult from \"./components/SearchResult\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport img from \"./components/media/library3.jpeg\";\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [user, setUser] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [cart, setCart] = useState({});\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n\n  let location = useLocation();\n  console.log(location);\n\n  //============================================================\n  function Copyright(props) {\n    return (\n      <Typography\n        variant=\"body2\"\n        color=\"text.secondary\"\n        align=\"center\"\n        {...props}\n      >\n        {\"Copyright Â© \"}\n        <Link to=\"/\">FULL BOOKSTACK</Link> {new Date().getFullYear()}\n        {\".\"}\n      </Typography>\n    );\n  }\n\n  //============================================================\n  const getUser = async () => {\n    if (!token) {\n      return;\n    }\n    setIsLoggedIn(true);\n    const response = await fetch(`${baseUrl}/users/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const info = await response.json();\n    setUser(info);\n  };\n\n  //============================================================\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      setToken(token);\n    }\n  }, []);\n\n  //============================================================\n\n  useEffect(() => {\n    getUser();\n  }, [token]);\n\n  //============================================================\n\n  useEffect(() => {\n    if (user) {\n      setIsAdmin(user.is_admin);\n    }\n  }, [user]);\n\n  //============================================================\n\n  const getMyCart = async () => {\n    if (user) {\n      const resp = await fetch(`${baseUrl}/orders/cart`, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      const info = await resp.json();\n      console.log(info);\n      setCart(info);\n    } else {\n      const products = JSON.parse(localStorage.getItem(\"localCart\"));\n      if (products) {\n        setCart({\n          products: products.map((product) => ({\n            id: null,\n            order_id: null,\n            product_id: product.product_id,\n            product_name: product.name,\n            product_image: product.image,\n            price: product.price,\n            quantity: product.quantity,\n          })),\n        });\n      }\n    }\n  };\n\n  //============================================================\n\n  useEffect(() => {\n    getMyCart();\n    console.log(cart);\n  }, [user]);\n\n  //============================================================\n\n  useEffect(async () => {\n    if (localStorage.getItem(\"localCart\")) {\n      let localCart = JSON.parse(localStorage.getItem(\"localCart\"));\n      for (let i = 0; i < localCart.length; i++) {\n        const response = await fetch(`${baseUrl}/orders/${cart.id}/products`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            product_id: localCart[i].product_id,\n            quantity: localCart[i].quantity,\n          }),\n        });\n        const info = await response.json();\n      }\n    }\n    getMyCart();\n    localStorage.setItem(\"localCart\", \"\");\n  }, [cart.id]);\n\n  //============================================================\n\n  const getCategories = async () => {\n    const response = await fetch(`${baseUrl}/categories`);\n    const info = await response.json();\n    setCategories(info);\n  };\n\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  //============================================================\n\n  // useEffect(() => {\n  //   let toastvar = localStorage.getItem(\"toast\");\n  //   console.log(\"toast:\", toastvar);\n  //   if (toastvar === 1) {\n  //     toast.success(`Welcome, ${user.name}.  You are now logged in.`, {\n  //       transition: Slide,\n  //     });\n  //     localStorage.setItem(\"toast\", \"\");\n  //     console.log(\"working\");\n  //   }\n  // }, []);\n\n  //============================================================\n\n  return (\n    <div>\n      <ToastContainer autclose={5000} position=\"top-right\" />\n      <Navbar\n        isLoggedIn={isLoggedIn}\n        setIsLoggedIn={setIsLoggedIn}\n        setUser={setUser}\n        setToken={setToken}\n        isAdmin={isAdmin}\n        setIsAdmin={setIsAdmin}\n        categories={categories}\n        setSearchTerm={setSearchTerm}\n        searchTerm={searchTerm}\n        setCart={setCart}\n      ></Navbar>\n\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n\n      <div>\n        <div\n        // style={{\n        //   backgroundImage: `url(${img})`,\n        //   backgroundRepeat: \"repeat\",\n        //   minHeight: \"84vh\",\n        //   height: \"100%\",\n        //   zIndex: \"-2\",\n        // }}\n        >\n          <Route exact path=\"/cart\">\n            <Cart\n              user={user}\n              token={token}\n              cart={cart}\n              getMyCart={getMyCart}\n              setTotal={setTotal}\n              setPurchaseDate={setPurchaseDate}\n            />\n          </Route>\n          <Route exact path=\"/account\">\n            <Account token={token} user={user} />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login\n              token={token}\n              setToken={setToken}\n              setIsLoggedIn={setIsLoggedIn}\n            />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register\n              setToken={setToken}\n              setIsLoggedIn={setIsLoggedIn}\n              getUser={getUser}\n              user={user}\n              getMyCart={getMyCart}\n            />\n          </Route>\n          <Route exact path=\"/products\">\n            <AllProducts />\n          </Route>\n          <Route exact path=\"/admin\">\n            <Admin token={token} user={user} categories={categories} />\n          </Route>\n          <Route exact path=\"/products/:id\">\n            <ProductPage\n              cart={cart}\n              user={user}\n              token={token}\n              getMyCart={getMyCart}\n              categories={categories}\n              getCategories={getCategories}\n              isAdmin={isAdmin}\n            />\n          </Route>\n          <Route exact path=\"/products/category/:name\">\n            <ProductCategory />\n          </Route>\n          <Route exact path=\"/products/search/:searchterm\">\n            <SearchResult />\n          </Route>\n          <Route exact path=\"/checkout\">\n            <CheckoutForm\n              total={total}\n              purchaseDate={purchaseDate}\n              cart={cart}\n              token={token}\n            />\n          </Route>\n          <Route exact path=\"/checkout-redirect\">\n            <CheckoutRedirect\n              token={token}\n              setToken={setToken}\n              setIsLoggedIn={setIsLoggedIn}\n              getMyCart={getMyCart}\n              getUser={getUser}\n              cart={cart}\n            />\n          </Route>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/reportWebVitals.js",[],"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Navbar.js",["106","107","108","109","110","111"],"import * as React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"./Components.css\";\nimport Button from \"@mui/material/Button\";\nimport IconButton from \"@mui/material/IconButton\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\n\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\n\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport { Typography } from \"@mui/material\";\n\nconst Navbar = (props) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const history = useHistory();\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const searchSubmit = (e) => {\n    const lowercaseSearch = props.searchTerm.toLowerCase();\n    history.push(`/products/search/${lowercaseSearch}`);\n  };\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const menuId = \"primary-search-account-menu\";\n\n  return (\n    <>\n      {/* <AppBar>\n        <Toolbar> */}\n      <div className=\"header\">\n        <div className=\"navbar-top\">\n          <div className=\"center\">\n            <Link\n              to=\"/\"\n              style={{\n                fontFamily: \"serif\",\n                fontSize: \"2rem\",\n                color: \"#F7f9fb\",\n                textDecoration: \"None\",\n              }}\n            >\n              <img\n                style={{\n                  height: \"250px\",\n                  marginTop: \"-5.8rem\",\n                  marginLeft: \"2rem\",\n                }}\n                src={\"/images/lgw2.png\"}\n              ></img>\n            </Link>\n          </div>\n          <div className=\"center\" style={{ marginTop: \"-6.5rem\" }}>\n            <form\n              onSubmit={searchSubmit}\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <input\n                onChange={(e) => {\n                  props.setSearchTerm(e.target.value);\n                }}\n                type=\"text\"\n                placeholder=\"Search by title, author, etc..\"\n                style={{\n                  width: \"80%\",\n                  height: \"2em\",\n                  borderRadius: \"10px\",\n                  fontSize: \"1em\",\n                  outline: \"none\",\n                  border: \"none\",\n                  paddingLeft: \"1em\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              ></input>\n            </form>\n          </div>\n          <div\n            className=\"center\"\n            style={{ marginRight: \"2em\", marginTop: \"-6.5rem\" }}\n          >\n            {props.isAdmin && (\n              <Link\n                to=\"/admin\"\n                style={{\n                  color: \"#F7f9fb\",\n                  textDecoration: \"none\",\n                  fontSize: \"1.2em\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Admin\n              </Link>\n            )}\n\n            {props.isLoggedIn && (\n              <IconButton\n                size=\"large\"\n                edge=\"end\"\n                aria-label=\"account of current user\"\n                aria-controls={menuId}\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n              >\n                <Link to=\"/account\">\n                  <AccountCircle style={{ color: \"#F7f9fb\" }} />\n                </Link>\n              </IconButton>\n            )}\n            <IconButton\n              size=\"large\"\n              aria-label=\"show more\"\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <Link to=\"/cart\">\n                <ShoppingCartIcon style={{ color: \"#F7f9fb\" }} />\n              </Link>\n            </IconButton>\n            {!props.isLoggedIn && (\n              <Link\n                to=\"/login\"\n                style={{\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.2em\",\n                  textDecoration: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Login\n              </Link>\n            )}\n\n            {props.isLoggedIn && (\n              <Link\n                to=\"/\"\n                onClick={() => {\n                  localStorage.setItem(\"token\", \"\");\n                  props.setIsLoggedIn(false);\n                  props.setUser(null);\n                  props.setToken(\"\");\n                  props.setIsAdmin(false);\n                  props.setCart({});\n                }}\n                style={{\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.2em\",\n                  textDecoration: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Logout\n              </Link>\n            )}\n          </div>\n        </div>\n\n        <div\n          className=\"navbar-bottom\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div>\n            <IconButton\n              id=\"basic-button\"\n              size=\"large\"\n              aria-controls=\"basic-menu\"\n              aria-haspopup=\"true\"\n              aria-expanded={isMenuOpen ? \"true\" : undefined}\n              onClick={handleClick}\n              style={{\n                textDecoration: \"none\",\n                color: \"#F7f9fb\",\n                fontSize: \"1.2em\",\n                fontFamily: \"yuji syuku\",\n                fontWeight: \"bold\",\n                marginTop: \"0em\",\n                alignContent: \"center\",\n              }}\n              margin-\n            >\n              <MenuIcon style={{ marginRight: \"0.5em\", marginTop: \"0.2em\" }} />{\" \"}\n              All Categories\n            </IconButton>\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={isMenuOpen}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n              class=\"dropdown\"\n            >\n              {props.categories.map((category) => {\n                return (\n                  <div\n                    class=\"dropbtn\"\n                    key={category.id}\n                    onClick={handleClose}\n                    style={{\n                      fontFamily: \"yuji syuku\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    <a\n                      href={\"/products/category/\" + category.name.toLowerCase()}\n                      style={{\n                        textDecoration: \"none\",\n                        color: \"#111111\",\n                        fontSize: \"1.2em\",\n                      }}\n                    >\n                      {\" \"}\n                      {category.name}\n                    </a>\n                  </div>\n                );\n              })}\n            </Menu>\n            <Button color=\"inherit\">\n              <a\n                href=\"/products/category/fiction\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.3em\",\n                  borderLeft: \"white 1px solid\",\n                  paddingLeft: \"1em\",\n                  textTransform: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Fiction\n              </a>\n            </Button>\n            <Button color=\"inherit\">\n              <a\n                href=\"/products/category/nonfiction\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.3em\",\n                  borderLeft: \"white 1px solid\",\n                  paddingLeft: \"1em\",\n                  textTransform: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Nonfiction\n              </a>\n            </Button>\n            <Button color=\"inherit\">\n              <a\n                href=\"/products/category/children\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.3em\",\n                  borderLeft: \"white 1px solid\",\n                  paddingLeft: \"1em\",\n                  textTransform: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Children\n              </a>\n            </Button>\n            <Button color=\"inherit\">\n              <a\n                href=\"/products/category/young%20adult\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.3em\",\n                  borderLeft: \"white 1px solid\",\n                  paddingLeft: \"1em\",\n                  textTransform: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Young Adult\n              </a>\n            </Button>\n            <Button color=\"inherit\">\n              <a\n                href=\"/products/category/travel\"\n                style={{\n                  textDecoration: \"none\",\n                  color: \"#F7f9fb\",\n                  fontSize: \"1.3em\",\n                  borderLeft: \"white 1px solid\",\n                  paddingLeft: \"1em\",\n                  textTransform: \"none\",\n                  fontFamily: \"yuji syuku\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                Travel\n              </a>\n            </Button>\n          </div>\n        </div>\n      </div>\n      {/* </Toolbar>\n      </AppBar> */}\n    </>\n  );\n};\n\nexport default Navbar;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Cart.js",["112","113","114","115","116","117"],"import \"./Components.css\";\nimport {\n  Button,\n  CardMedia,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport baseUrl from \"../api\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport {\n  SettingsOverscanOutlined,\n  SettingsOverscanTwoTone,\n} from \"@mui/icons-material\";\nimport img from \"../components/media/library3.jpeg\";\n\nconst TAX_RATE = 0.07;\n\nconst useStyles = makeStyles({\n  header: {\n    marginLeft: \"30px\",\n  },\n  root: {\n    maxWidth: \"800px\",\n    marginTop: \"3em\",\n    overflowX: \"auto\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  table: {\n    minWidth: 500,\n  },\n  row: {\n    backgroundColor: \"#7395ae\",\n  },\n  btn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"1rem\",\n  },\n});\n\nconst Cart = (props) => {\n  const cart = props.cart;\n  const history = useHistory();\n  const [updatedProduct, setUpdatedProduct] = useState({\n    productId: \"\",\n    quantity: \"\",\n  });\n\n  function ccyFormat(num) {\n    return `${Number(num).toFixed(2)}`;\n  }\n\n  let subtotal = 0;\n\n  if (cart.products) {\n    for (let product of cart.products) {\n      subtotal = product.price * product.quantity + subtotal;\n    }\n  }\n  const taxes = subtotal * TAX_RATE;\n  const invoiceTotal = subtotal + taxes;\n\n  //=======================================================\n\n  const deleteProductFromCart = async (productId, localProductId) => {\n    if (props.user) {\n      await fetch(`${baseUrl}/cartItems/${productId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${props.token}`,\n        },\n      });\n    } else {\n      let localCart = JSON.parse(localStorage.getItem(\"localCart\"));\n      for (let i = 0; i < localCart.length; i++) {\n        if (localCart[i].product_id === localProductId) {\n          localCart.splice(i, 1);\n          localStorage.setItem(\"localCart\", JSON.stringify(localCart));\n          break;\n        }\n      }\n    }\n    console.log(\"working\");\n    props.getMyCart();\n  };\n\n  //=======================================================\n\n  const updateProductInCart = async (localProductId) => {\n    if (props.user) {\n      await fetch(`${baseUrl}/cartItems/${updatedProduct.productId}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${props.token}`,\n        },\n        body: JSON.stringify({\n          quantity: updatedProduct.quantity,\n        }),\n      });\n    } else {\n      if (localStorage.getItem(\"localCart\")) {\n        let localCart = JSON.parse(localStorage.getItem(\"localCart\"));\n        for (let i = 0; i < localCart.length; i++) {\n          console.log(localCart[i].product_id, updatedProduct.localProductId);\n          if (localCart[i].product_id === updatedProduct.localProductId) {\n            localCart[i].quantity = updatedProduct.quantity;\n            localStorage.setItem(\"localCart\", JSON.stringify(localCart));\n            break;\n          }\n        }\n      }\n      console.log(\"working\");\n    }\n    props.getMyCart();\n  };\n\n  useEffect(() => {\n    updateProductInCart();\n  }, [updatedProduct]);\n\n  //=======================================================\n\n  const Basket = () => {\n    const classes = useStyles();\n\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${img})`,\n          backgroundRepeat: \"repeat\",\n          minHeight: \"84vh\",\n          height: \"100%\",\n          zIndex: \"-2\",\n          // marginTop: \"-3em\",\n          height: \"100\",\n          fontFamily: \"Nunito\",\n        }}\n      >\n        <br></br>\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"satisfy\",\n            fontSize: \"3em\",\n            fontWeight: \"700\",\n          }}\n        >\n          Shopping Cart\n        </h1>\n        <Paper className={classes.root}>\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow className={classes.row}>\n                <TableCell>Product</TableCell>\n                <TableCell align=\"right\">Qty.</TableCell>\n                <TableCell align=\"right\">@</TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {(!cart.products ||\n                (cart.products && cart.products.length === 0)) && (\n                <div\n                  style={{\n                    marginLeft: \"1em\",\n                    marginTop: \"1em\",\n                    fontSize: \"1.2em\",\n                  }}\n                >\n                  There are no items in the cart.\n                </div>\n              )}\n              {cart.products &&\n                cart.products.length > 0 &&\n                cart.products.map((product) => (\n                  <TableRow key={product.product_id}>\n                    <TableCell\n                      style={{ display: \"flex\", alignItems: \"center\" }}\n                    >\n                      <img\n                        src={`${product.product_image}`}\n                        style={{ height: \"5em\", marginRight: \"1em\" }}\n                      />\n                      {product.product_name}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <select\n                        name=\"quantity\"\n                        value={product.quantity}\n                        onChange={(e) => {\n                          setUpdatedProduct({\n                            productId: product.id,\n                            localProductId: product.product_id,\n                            quantity: e.target.value,\n                          });\n                        }}\n                      >\n                        {product.quantity === 1 ? (\n                          <option value=\"1\" selected>\n                            1\n                          </option>\n                        ) : (\n                          <option value=\"1\">1</option>\n                        )}\n                        {product.quantity === 2 ? (\n                          <option value=\"2\" selected>\n                            2\n                          </option>\n                        ) : (\n                          <option value=\"2\">2</option>\n                        )}\n                        {product.quantity === 3 ? (\n                          <option value=\"3\" selected>\n                            3\n                          </option>\n                        ) : (\n                          <option value=\"3\">3</option>\n                        )}\n                        {product.quantity === 4 ? (\n                          <option value=\"4\" selected>\n                            4\n                          </option>\n                        ) : (\n                          <option value=\"4\">4</option>\n                        )}\n                        {product.quantity === 5 ? (\n                          <option value=\"5\" selected>\n                            5\n                          </option>\n                        ) : (\n                          <option value=\"5\">5</option>\n                        )}\n                      </select>\n                      <IconButton>\n                        <DeleteForeverIcon\n                          onClick={() =>\n                            deleteProductFromCart(\n                              product.id,\n                              product.product_id\n                            )\n                          }\n                        ></DeleteForeverIcon>\n                      </IconButton>\n                    </TableCell>\n                    <TableCell align=\"right\">{product.price}</TableCell>\n                    <TableCell align=\"right\">\n                      {ccyFormat(product.price * product.quantity)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              <TableRow>\n                <TableCell rowSpan={3} />\n                <TableCell colSpan={2}>Subtotal</TableCell>\n                <TableCell align=\"right\">{ccyFormat(subtotal)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Tax</TableCell>\n                <TableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(\n                  0\n                )} %`}</TableCell>\n                <TableCell align=\"right\">{ccyFormat(taxes)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2}>Total</TableCell>\n                <TableCell align=\"right\">{ccyFormat(invoiceTotal)}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </Paper>\n        <div className={classes.btn}>\n          <Button\n            style={{\n              marginTop: \"1em\",\n              height: \"56px\",\n              justifyContent: \"center\",\n              backgroundColor: \"#7395ae\",\n              marginBottom: \"2rem\",\n            }}\n            onClick={() => {\n              if (props.cart.products.length > 0) {\n                if (props.user) {\n                  props.setTotal(ccyFormat(invoiceTotal));\n                  props.setPurchaseDate(new Date().toDateString());\n                  history.push(\"/checkout\");\n                } else {\n                  props.setTotal(invoiceTotal);\n                  props.setPurchaseDate(new Date().toDateString());\n                  history.push(\"/checkout-redirect\");\n                }\n              }\n            }}\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Proceed to Checkout\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Basket></Basket>\n    </div>\n  );\n};\n\nexport default Cart;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Home.js",["118","119"],"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Account.js",["120","121"],"import {\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@mui/styles\";\nimport baseUrl from \"../api\";\nimport \"./Components.css\";\nimport img from \"../components/media/library3.jpeg\";\n\nconst TAX_RATE = 0.07;\n\nconst useStyles = makeStyles({\n  header: {\n    marginLeft: \"2rem\",\n  },\n  root: {\n    width: \"60%\",\n    overflowX: \"auto\",\n    margin: \"auto\",\n  },\n  row1: {\n    backgroundColor: \"#5085a5\",\n    fontSize: \"1.5em\",\n    color: \"white\",\n  },\n  row2: {\n    backgroundColor: \"#8fc1e3\",\n  },\n});\n\nconst Account = (props) => {\n  const [orders, setOrders] = useState([]);\n  const classes = useStyles();\n\n  const getMyOrders = async () => {\n    const resp = await fetch(`${baseUrl}/orders/me`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${props.token}`,\n      },\n    });\n    const info = await resp.json();\n    console.log(info);\n    setOrders(info);\n  };\n\n  useEffect(() => {\n    if (!props.user) {\n      return;\n    }\n    getMyOrders();\n  }, [props.user]);\n\n  function ccyFormat(num) {\n    return `${Number(num).toFixed(2)}`;\n  }\n\n  let subtotal = 0;\n\n  for (let product of orders) {\n    subtotal = product.price * product.quantity + subtotal;\n  }\n\n  const taxes = subtotal * TAX_RATE;\n  const invoiceTotal = subtotal + taxes;\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundImage: `url(${img})`,\n          backgroundRepeat: \"repeat\",\n          minHeight: \"84vh\",\n          height: \"100%\",\n          zIndex: \"-2\",\n          // marginTop: \"-3em\",\n\n          fontFamily: \"Nunito\",\n        }}\n      >\n        <br></br>\n        {/* <h1 style={{ marginLeft: \"2rem\" }}>\n        Welcome, {props.user.name.split(\" \")[0]}!\n      </h1> */}\n        <h1 style={{ marginLeft: \"2rem\" }}>My Account:</h1>\n        <h2 style={{ textAlign: \"center\" }}>Order History</h2>\n\n        {orders &&\n          orders.map((order) => (\n            <div>\n              <Paper className={classes.root}>\n                <div key={order.id}>\n                  <Table className={classes.table}>\n                    <TableHead>\n                      <TableRow className={classes.row1}>\n                        <TableCell\n                          align=\"left\"\n                          style={{ color: \"white\", fontSize: \"0.7em\" }}\n                        >\n                          Order #: {order.id}\n                        </TableCell>\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{ color: \"white\", fontSize: \"0.7em\" }}\n                        >\n                          Date Purchased: {order.date}\n                        </TableCell>\n                      </TableRow>\n                      <TableRow className={classes.row2}>\n                        <TableCell>Product</TableCell>\n                        <TableCell align=\"left\">Qty.</TableCell>\n                        <TableCell align=\"right\">@</TableCell>\n                        <TableCell align=\"right\">Price</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {order.products.map((product) => {\n                        return (\n                          <TableRow key={product.product_id}>\n                            <TableCell>{product.product_name}</TableCell>\n                            <TableCell>{product.quantity}</TableCell>\n                            <TableCell align=\"right\">{product.price}</TableCell>\n                            <TableCell align=\"right\">\n                              {ccyFormat(product.price * product.quantity)}\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })}\n                      <TableRow>\n                        <TableCell />\n                        <TableCell></TableCell>\n                        <TableCell></TableCell>\n                        <TableCell align=\"right\">\n                          Total &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $\n                          {order.total}\n                        </TableCell>\n                      </TableRow>\n                    </TableBody>\n                  </Table>\n                </div>\n              </Paper>\n              <div style={{ margin: \"1rem\" }}>\n                <br></br>\n              </div>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Account;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Login.js",["122","123","124","125","126","127"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport baseUrl from \"../api\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport img from \"../components/media/library3.jpeg\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link to=\"/\">FULL BOOKSTACK</Link> {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nconst Login = (props) => {\n  const token = props.token;\n  const setToken = props.setToken;\n  const setIsLoggedIn = props.setIsLoggedIn;\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n\n    const response = await fetch(`${baseUrl}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    });\n    const info = await response.json();\n    console.log(info);\n\n    if (info.error) {\n      console.log(info.error);\n      return setErrorMessage(info.error);\n    }\n    localStorage.setItem(\"token\", info.token);\n\n    setIsLoggedIn(true);\n    setToken(info.token);\n    history.push(\"/account\");\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${img})`,\n        backgroundRepeat: \"repeat\",\n        minHeight: \"84vh\",\n        height: \"100%\",\n        zIndex: \"-2\",\n        // marginTop: \"-3em\",\n        height: \"100vh\",\n        fontFamily: \"Nunito\",\n      }}\n    >\n      <br></br>\n      <Container\n        component=\"main\"\n        maxWidth=\"xs\"\n        style={{\n          width: \"60%\",\n          borderRadius: \"10px\",\n          backgroundColor: \"#FBFBFD\",\n        }}\n      >\n        <CssBaseline />\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ mt: 2, bgcolor: \"#e0bc75\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography\n            component=\"h1\"\n            variant=\"h5\"\n            style={{\n              fontFamily: \"satisfy\",\n              fontSize: \"3em\",\n              fontWeight: \"700\",\n            }}\n          >\n            Login\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              required\n              fullWidth\n              lassName=\"login-input\"\n              placeholder=\"Enter email\"\n              minLength={6}\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              className=\"login-input\"\n              type=\"password\"\n              min={8}\n              placeholder=\"Enter password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              style={{\n                backgroundColor: \"#7395ae\",\n              }}\n              onClick={() => {\n                localStorage.setItem(\"toast\", 1);\n              }}\n            >\n              Login\n            </Button>\n            <p className=\"errorMessage\">{errorMessage}</p>\n            <div style={{ marginBottom: \"2rem\", alignSelf: \"center\" }}>\n              <Link to=\"/register\">{\"Don't have an account? Sign Up\"}</Link>\n            </div>\n          </Box>\n        </Box>\n      </Container>\n    </div>\n  );\n};\n\nexport default Login;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/api/index.js",[],"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Register.js",["128","129","130"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport baseUrl from \"../api\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport img from \"../components/media/library3.jpeg\";\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link to=\"/\">FULL BOOKSTACK</Link> {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nconst Register = (props) => {\n  const token = props.token;\n  const setToken = props.setToken;\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n\n    if (password !== confirmPassword) {\n      return setErrorMessage(\"Passwords do not match\");\n    }\n    const response = await fetch(`${baseUrl}/users/register`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        name: name,\n        password: password,\n      }),\n    });\n    const info = await response.json();\n    console.log(info);\n\n    if (info.error) {\n      return setErrorMessage(info.error);\n    }\n\n    localStorage.setItem(\"token\", info.token);\n    setToken(info.token);\n    props.setIsLoggedIn(true);\n    history.push(\"./\");\n  };\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${img})`,\n        backgroundRepeat: \"repeat\",\n        minHeight: \"84vh\",\n        height: \"100%\",\n        zIndex: \"-2\",\n        // marginTop: \"-3em\",\n        height: \"100vh\",\n        fontFamily: \"Nunito\",\n      }}\n    >\n      <ThemeProvider theme={theme}>\n        <br></br>\n        <Container\n          component=\"main\"\n          maxWidth=\"xs\"\n          style={{\n            width: \"60%\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#FBFBFD\",\n          }}\n        >\n          <CssBaseline />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: \"#e0bc75\" }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              style={{\n                fontFamily: \"satisfy\",\n                fontSize: \"3em\",\n                fontWeight: \"700\",\n              }}\n            >\n              Register\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <Grid container spacing={2}>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    className=\"login-input\"\n                    placeholder=\"Enter email\"\n                    minLength={6}\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    className=\"login-input\"\n                    placeholder=\"Enter name\"\n                    type=\"text\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    className=\"login-input\"\n                    type=\"password\"\n                    min={8}\n                    placeholder=\"Enter password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    required\n                    fullWidth\n                    className=\"login_input\"\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                style={{ backgroundColor: \"#7395ae\" }}\n              >\n                Register\n              </Button>\n              <p className=\"errorMessage\">{errorMessage}</p>\n              <Grid container justifyContent=\"flex-end\">\n                <Grid item style={{ paddingBottom: \"2rem\" }}>\n                  <Link to=\"/login\" variant=\"body2\">\n                    Already have an account? Click here to log in.\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/AllProducts.js",["131","132","133","134","135","136","137"],"import \"./Components.css\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\nimport baseUrl from \"../api\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  body: {\n    backgroundColor: \"#d1d7e0\",\n  },\n  card: {\n    height: \"auto\",\n    backgroundColor: \"#f7f9fb\",\n  },\n});\n\nconst AllProducts = (props) => {\n  const [books, setBooks] = useState([]);\n  const [productId, setProductId] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const classes = useStyles();\n\n  const getAllBooks = async () => {\n    const resp = await fetch(`${baseUrl}/products`);\n    const info = await resp.json();\n    setBooks(info);\n  };\n\n  useEffect(() => {\n    getAllBooks();\n  }, []);\n\n  //   const addToCart = async (productId) => {\n  //     const response = await fetch(`${baseUrl}/products`, {\n  //       method: \"POST\",\n  //       headers: {\n  //         Authorization: `Bearer ${props.token}`,\n  //       },\n  //       body: {\n  //         product_id: productId,\n  //         quantity: 1,\n  //       },\n  //     });\n  //     const info = await response.json();\n  //     if (info.error) {\n  //       console.log(info.error);\n  //       return setErrorMessage(info.error);\n  //     }\n  //   };\n\n  return (\n    <body className={classes.body}>\n      <h1>All Books</h1>\n      <Container>\n        <Grid container spacing={3} alignItems=\"center\">\n          {books.map((book) => (\n            <Grid item key={book.id} xs={12} sm={6} md={3}>\n              <Link\n                style={{ textDecoration: \"none\" }}\n                to={`/products/${book.id}`}\n              >\n                <Card raised className={classes.card}>\n                  <CardContent>\n                    <CardMedia>\n                      <img\n                        src={book.image}\n                        style={{\n                          height: \"20em\",\n                          width: \"14em\",\n                          display: \"block\",\n                          marginLeft: \"auto\",\n                          marginRigh: \"auto\",\n                        }}\n                      />\n                    </CardMedia>\n                  </CardContent>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body2\"\n                    fontWeight=\"900\"\n                    color=\"#31708e\"\n                  >\n                    {\" \"}\n                    {book.name}\n                  </Typography>\n                  <Typography\n                    align=\"right\"\n                    variant=\"subtitle1\"\n                    padding=\".5em\"\n                    color=\"#31708e\"\n                  >\n                    ${book.price}\n                  </Typography>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </body>\n  );\n};\n\nexport default AllProducts;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Admin.js",["138","139","140","141","142","143","144","145"],"import { Link } from \"react-router-dom\";\nimport Box from \"@mui/material/Box\";\nimport Container from \"@mui/material/Container\";\nimport \"./Components.css\";\nimport {\n  Button,\n  CssBaseline,\n  FormControl,\n  IconButton,\n  Input,\n  InputLabel,\n  MenuItem,\n  Select,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableFooter,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport baseUrl from \"../api\";\n\nconst Admin = (props) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [users, setUsers] = useState([]);\n\n  const addProduct = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"author\", author);\n    formData.append(\"description\", description);\n    formData.append(\"price\", price);\n    formData.append(\"stock\", quantity);\n    formData.append(\"image\", image);\n    formData.append(\"category\", category);\n\n    const response = await fetch(`${baseUrl}/products`, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${props.token}`,\n      },\n      body: formData,\n    });\n    const info = await response.json();\n    if (info.error) {\n      console.log(info.error);\n      return setErrorMessage(info.error);\n    }\n    setName(\"\");\n    setDescription(\"\");\n    setAuthor(\"\");\n    setPrice(\"\");\n    setCategory(\"\");\n    setQuantity(\"\");\n    setImage(\"\");\n    setErrorMessage(\"\");\n  };\n\n  const getAllUsers = async () => {\n    const resp = await fetch(`${baseUrl}/users`);\n    const info = await resp.json();\n    setUsers(info);\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, []);\n\n  return (\n    <div style={{ backgroundColor: \"white\" }}>\n      <h1\n        style={{\n          textAlign: \"center\",\n          marginBottom: \"2rem\",\n          textDecoration: \"underline\",\n        }}\n      >\n        Admin Dashboard\n      </h1>\n      <div style={{ width: \"80%\", marginLeft: \"2rem\" }}>\n        <div>\n          <h3 style={{ marginLeft: \"1rem\", marginBottom: \"0rem\" }}>\n            Add New Product:\n          </h3>\n          <form onSubmit={addProduct} style={{ zIndex: -2 }}>\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Name\"\n              value={name}\n              variant=\"outlined\"\n              onChange={(e) => setName(e.target.value)}\n              required\n            />\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Author\"\n              value={author}\n              variant=\"outlined\"\n              onChange={(e) => setAuthor(e.target.value)}\n              required\n            />\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Description\"\n              value={description}\n              variant=\"outlined\"\n              onChange={(e) => setDescription(e.target.value)}\n              required\n            />\n\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Price\"\n              value={price}\n              variant=\"outlined\"\n              onChange={(e) => setPrice(e.target.value)}\n              required\n            />\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Stock\"\n              value={quantity}\n              variant=\"outlined\"\n              onChange={(e) => setQuantity(e.target.value)}\n              required\n            />\n            <FormControl length>\n              <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n              <Select\n                style={{ margin: \"1rem\", minWidth: \"120px\" }}\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select-helper\"\n                value={category}\n                label=\"Category\"\n                onChange={(e) => setCategory(e.target.value)}\n                required\n              >\n                {props.categories.map((category) => {\n                  return (\n                    <MenuItem value={category.name}>{category.name}</MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <TextField\n              style={{ margin: \"1rem\" }}\n              id=\"add-product-input\"\n              label=\"Add Product Image\"\n              InputLabelProps={{ shrink: true }}\n              type=\"file\"\n              variant=\"outlined\"\n              onChange={(e) => setImage(e.target.files[0])}\n              required\n            />\n            <Button\n              style={{\n                margin: \"1rem\",\n                height: \"56px\",\n                backgroundColor: \"#7395ae\",\n              }}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Add Product!\n            </Button>\n          </form>\n          <p style={{ color: \"red\" }}>{errorMessage}</p>\n        </div>\n        <div>\n          <h3\n            style={{\n              marginLeft: \"1rem\",\n              marginBottom: \"0rem\",\n              marginBottom: \"1rem\",\n            }}\n          >\n            Users List:\n          </h3>\n          <TableContainer>\n            <Table\n              sx={{ minWidth: 650 }}\n              aria-label=\"simple table\"\n              size={\"medium\"}\n            >\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell align=\"left\">ID No.</TableCell>\n                  <TableCell align=\"left\">Email</TableCell>\n                  <TableCell align=\"center\">Admin?</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user) => (\n                  <TableRow\n                    key={user.email}\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">\n                      {user.name}\n                    </TableCell>\n                    <TableCell align=\"left\">{user.id}</TableCell>\n                    <TableCell align=\"left\">{user.email}</TableCell>\n                    <TableCell align=\"center\">\n                      {user.is_admin ? \"Yes\" : \"No\"}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n              <TableFooter>\n                <TableRow></TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/ProductPage.js",["146","147","148","149","150","151","152","153","154"],"import { Link, useHistory } from \"react-router-dom\";\nimport \"./Components.css\";\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport baseUrl from \"../api\";\nimport { ThumbUp } from \"@mui/icons-material\";\nimport { toast, Slide, ToastContainer } from \"react-toastify\";\nimport UpdateProductForm from \"./UpdateProductForm.js\";\n\n//======================================================\n\nconst ProductPage = (props) => {\n  const [book, setBook] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"1\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const token = props.token;\n  const categories = props.categories;\n  const setCategories = props.setCategories;\n\n  //======================================================\n\n  function ccyFormat(num) {\n    return `${Number(num).toFixed(2)}`;\n  }\n\n  //======================================================\n\n  const getBookInfo = async () => {\n    const response = await fetch(`${baseUrl}${window.location.pathname}`);\n    const info = await response.json();\n    setBook(info);\n  };\n\n  useEffect(() => {\n    getBookInfo();\n  }, []);\n\n  //======================================================\n\n  const addItemToCart = async (e) => {\n    e.preventDefault();\n    const product_id = window.location.pathname.substring(10);\n\n    if (props.user) {\n      const response = await fetch(\n        `${baseUrl}/orders/${props.cart.id}/products`,\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            product_id: product_id,\n            quantity: quantity,\n          }),\n        }\n      );\n      const info = await response.json();\n      console.log(\"working\");\n      props.getMyCart();\n      if (info.error) {\n        console.log(info.error);\n        return setErrorMessage(info.error);\n      }\n    } else {\n      const response = await fetch(`${baseUrl}/products/${product_id}`);\n      const { id, price, name, image } = await response.json();\n\n      if (localStorage.getItem(\"localCart\")) {\n        let localCart = JSON.parse(localStorage.getItem(\"localCart\"));\n        localCart.push({\n          product_id: id,\n          name: name,\n          price: price,\n          image: image,\n          quantity: quantity,\n        });\n        localStorage.setItem(\"localCart\", JSON.stringify(localCart));\n      } else {\n        let localCart = [\n          {\n            product_id: id,\n            name: name,\n            price: price,\n            image: image,\n            quantity: quantity,\n          },\n        ];\n        localStorage.setItem(\"localCart\", JSON.stringify(localCart));\n      }\n      props.getMyCart();\n    }\n  };\n\n  //======================================================\n\n  const deleteProduct = async () => {\n    const productId = window.location.pathname.substring(10);\n    await fetch(`${baseUrl}/products/${productId}`, {\n      method: \"DELETE\",\n    });\n    history.push(\"/admin\");\n  };\n\n  //======================================================\n\n  return (\n    <div\n      style={{\n        display: \"grid\",\n        gridTemplateColumns: \"50% 50%\",\n        marginTop: \"3em\",\n        marginRight: \"4em\",\n        marginLeft: \"2em\",\n      }}\n    >\n      <div style={{ marginRight: \"auto\", marginLeft: \"auto\" }}>\n        <img\n          style={{ height: \"400px\" }}\n          src={\n            book.image && book.image.includes(\"http\")\n              ? book.image\n              : `/images/${book.image}`\n          }\n        ></img>\n      </div>\n      <div style={{ marginRight: \"auto\", marginLeft: \"0em\" }}>\n        {props.isAdmin && (\n          <div\n            style={{\n              borderRadius: \"10px\",\n              backgroundColor: \"#e0e0eb\",\n              display: \"flex\",\n              padding: \"0.5em\",\n              minHeight: \"1.5em\",\n              alignContent: \"center\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <h4\n              style={{\n                marginLeft: \"0.5em\",\n                marginTop: \"0.3em\",\n              }}\n            >\n              Admin Controls:\n            </h4>\n            <Button\n              variant=\"outlined\"\n              size=\"small\"\n              color=\"error\"\n              onClick={deleteProduct}\n              style={{\n                marginRight: \"0.5em\",\n                marginLeft: \"0.5em\",\n                maxHeight: \"2em\",\n                marginTop: \"0.3em\",\n                // color: \"red\",\n                // border: \"1px solid red\",\n              }}\n            >\n              Delete Product\n            </Button>\n            <UpdateProductForm\n              token={token}\n              book={book}\n              categories={categories}\n              setCategories={setCategories}\n              getBookInfo={getBookInfo}\n            ></UpdateProductForm>\n          </div>\n        )}\n        <h2>{book.name}</h2>\n        <div>by {book.author}</div>\n        <br></br>\n        <div\n          style={{\n            borderBottom: \"2px solid black\",\n            paddingBottom: \"1em\",\n          }}\n        >\n          {book.description}\n        </div>\n        <div style={{ marginTop: \"2rem\" }}>\n          {book.stock && (\n            <div>\n              <ThumbUp style={{ color: \"green\", marginRight: \"1rem\" }} />\n              <span> In Stock - {book.stock} available</span>\n            </div>\n          )}\n          {!book.stock && <div style={{ color: \"red\" }}> Out of Stock</div>}\n          <div style={{ marginTop: \"1em\" }}>${ccyFormat(book.price)}</div>\n          <form onSubmit={addItemToCart} style={{ marginTop: \"1em\" }}>\n            <label>QTY - </label>\n            <select\n              required\n              defaultValue={1}\n              onChange={(e) => {\n                setQuantity(e.target.value);\n              }}\n            >\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>{\" \"}\n            <br></br>\n            <br></br>\n            <Button\n              style={{\n                marginTop: \"1em\",\n                height: \"56px\",\n                justifyContent: \"center\",\n                backgroundColor: \"#7395ae\",\n                marginBottom: \"2rem\",\n              }}\n              onClick={() => {\n                toast.success(`You have added ${book.name} to your cart!`, {\n                  transition: Slide,\n                });\n              }}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Add to Cart\n            </Button>\n          \n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductPage;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/ProductCategory.js",["155","156","157","158","159","160","161"],"import \"./Components.css\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\nimport baseUrl from \"../api\";\nimport { Link } from \"react-router-dom\";\nimport img from \"../components/media/library3.jpeg\";\n\nfunction ccyFormat(num) {\n  return `${Number(num).toFixed(2)}`;\n}\n\nconst useStyles = makeStyles({\n  card: {\n    height: \"auto\",\n    backgroundColor: \"#f7f9fb\",\n  },\n});\n\nconst ProductCategory = (props) => {\n  const [books, setBooks] = useState([]);\n  const [productId, setProductId] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const classes = useStyles();\n\n  const getBooksbyCategory = async () => {\n    const url = `${baseUrl}${window.location.pathname}`;\n    console.log(url);\n    const resp = await fetch(url);\n    const info = await resp.json();\n    setBooks(info);\n  };\n\n  useEffect(() => {\n    getBooksbyCategory();\n  }, []);\n\n  let categoryName = window.location.pathname;\n  categoryName =\n    categoryName.substring(19).charAt(0).toUpperCase() +\n    categoryName.substring(19).slice(1);\n  categoryName = categoryName.toString().replace(/%20/g, \" \");\n  let words = categoryName.split(\" \");\n  for (let i = 0; i < words.length; i++) {\n    if (words[i] !== \"and\") {\n      words[i] = words[i][0].toUpperCase() + words[i].substring(1);\n    } else {\n      words[i] = words[i];\n    }\n  }\n  categoryName = words.join(\" \");\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${img})`,\n        backgroundRepeat: \"repeat\",\n        minHeight: \"84vh\",\n        height: \"100%\",\n        zIndex: \"-2\",\n        marginTop: \"-3em\",\n      }}\n    >\n      <br></br>\n      <h1\n        style={{\n          textAlign: \"center\",\n          fontFamily: \"satisfy\",\n          fontSize: \"3em\",\n          fontWeight: \"700\",\n          marginTop: \"1em\",\n        }}\n      >\n        {categoryName}\n      </h1>\n      <Container>\n        <Grid container spacing={3} alignItems=\"center\">\n          {books.map((book) => (\n            <Grid item key={book.id} xs={12} sm={6} md={3}>\n              <Link\n                style={{ textDecoration: \"none\" }}\n                to={`/products/${book.id}`}\n              >\n                <Card raised className={classes.card}>\n                  <CardContent>\n                    <CardMedia\n                      component=\"img\"\n                      height=\"340em\"\n                      image={\n                        book.image.includes(\"http\")\n                          ? book.image\n                          : `/images/${book.image}`\n                      }\n                      alt={book.name}\n                    />\n                  </CardContent>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body2\"\n                    fontWeight=\"900\"\n                    color=\"#31708e\"\n                  >\n                    {\" \"}\n                    {book.name}\n                  </Typography>\n                  <Typography\n                    align=\"right\"\n                    variant=\"subtitle1\"\n                    padding=\".5em\"\n                    color=\"#31708e\"\n                  >\n                    ${ccyFormat(book.price)}\n                  </Typography>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ProductCategory;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/styles.js",[],["162","163"],"/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/SearchResult.js",["164","165","166","167","168","169","170"],"import \"./Components.css\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport { useEffect, useState } from \"react\";\nimport baseUrl from \"../api\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  card: {\n    height: \"auto\",\n    backgroundColor: \"#f7f9fb\",\n  },\n});\n\nconst SearchResult = (props) => {\n  const [books, setBooks] = useState([]);\n  const [productId, setProductId] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const classes = useStyles();\n\n  const searchProducts = async () => {\n    const url = `${baseUrl}${window.location.pathname}`;\n    console.log(url);\n    const resp = await fetch(url);\n    const info = await resp.json();\n    setBooks(info);\n  };\n\n  useEffect(() => {\n    searchProducts();\n    console.log(\"working\");\n  }, []);\n\n  return (\n    <>\n      <h1 style={{ textAlign: \"center\" }}>Search Results</h1>\n      {!books && <div>No results for this search.</div>}\n      <Container>\n        <Grid container spacing={3} alignItems=\"center\">\n          {books.map((book) => (\n            <Grid item key={book.id} xs={12} sm={6} md={3}>\n              <Link\n                style={{ textDecoration: \"none\" }}\n                to={`/products/${book.id}`}\n              >\n                <Card raised className={classes.card}>\n                  <CardContent>\n                    <CardMedia>\n                      <img\n                        src={book.image}\n                        style={{\n                          height: \"20em\",\n                          width: \"14em\",\n                          display: \"block\",\n                          marginLeft: \"auto\",\n                          marginRigh: \"auto\",\n                        }}\n                      />\n                    </CardMedia>\n                  </CardContent>\n                  <Typography\n                    align=\"center\"\n                    variant=\"body2\"\n                    fontWeight=\"900\"\n                    color=\"#31708e\"\n                  >\n                    {\" \"}\n                    {book.name}\n                  </Typography>\n                  <Typography\n                    align=\"right\"\n                    variant=\"subtitle1\"\n                    padding=\".5em\"\n                    color=\"#31708e\"\n                  >\n                    ${book.price}\n                  </Typography>\n                </Card>\n              </Link>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchResult;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/Checkout.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import {\n  Button,\n  Card,\n  Checkbox,\n  Container,\n  Grid,\n  Paper,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { makeStyles } from \"@mui/styles\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport baseUrl from \"../api\";\nimport img from \"../components/media/library3.jpeg\";\n\nconst useStyles = makeStyles({\n  header: {\n    marginLeft: \"0\",\n    fontSize: \"1.5rem\",\n  },\n  center: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingTop: \"2rem\",\n  },\n  billing: {\n    width: \"40%\",\n    margin: \"0 2rem 2rem 2rem\",\n  },\n  creditcard: {\n    width: \"40%\",\n    marginRight: \"2rem\",\n  },\n  shipping: {\n    width: \"80%\",\n    marginRight: \"1.3rem\",\n    paddingBottom: \"2rem\",\n  },\n  btn: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    margin: \"2rem\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    justifyItems: \"end\",\n  },\n});\n\nfunction CheckoutForm(props) {\n  const classes = useStyles();\n  const [billingFirstName, setBillingFirstName] = useState(\"\");\n  const [billingLasttName, setBillingLasttName] = useState(\"\");\n  const [billingAddresLine1, setBillingAddresLine1] = useState(\"\");\n  const [billingAddressLine2, setBillingAddressLine2] = useState(\"\");\n  const [billingZip, setBillingZip] = useState(\"\");\n  const [billingCity, setBillingCity] = useState(\"\");\n  const [billingState, setBillingState] = useState(\"\");\n  const [billingCountry, setBillingCountry] = useState(\"\");\n\n  const [same, setSame] = useState(false);\n  const [shippingFirstName, setshippingFirstName] = useState(\"\");\n  const [shippingLasttName, setshippingLasttName] = useState(\"\");\n  const [shippingAddresLine1, setshippingAddresLine1] = useState(\"\");\n  const [shippingAddressLine2, setshippingAddressLine2] = useState(\"\");\n  const [shippingZip, setshippingZip] = useState(\"\");\n  const [shippingCity, setshippingCity] = useState(\"\");\n  const [shippingState, setshippingState] = useState(\"\");\n  const [shippingCountry, setshippingCountry] = useState(\"\");\n\n  const history = useHistory();\n\n  const completeOrder = async () => {\n    console.log(props.cart.id);\n    const response = await fetch(`${baseUrl}/orders/${props.cart.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${props.token}`,\n      },\n      body: JSON.stringify({\n        total: props.total,\n        date: props.purchaseDate,\n      }),\n    });\n    const info = await response.json();\n    console.log(\"working\");\n    history.push(\"/account\");\n  };\n\n  const sameAsShipping = () => {\n    if (same) {\n      setshippingFirstName(billingFirstName);\n      setshippingLasttName(billingLasttName);\n      setshippingAddresLine1(billingAddresLine1);\n      setshippingAddressLine2(billingAddressLine2);\n      setshippingZip(billingZip);\n      setshippingCity(billingCity);\n      setshippingState(billingState);\n      setshippingCountry(billingCountry);\n    }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          backgroundImage: `url(${img})`,\n          backgroundRepeat: \"repeat\",\n          minHeight: \"84vh\",\n          height: \"100%\",\n          zIndex: \"-2\",\n          // marginTop: \"-3em\",\n          height: \"100vh\",\n          fontFamily: \"Nunito\",\n        }}\n      >\n        <br></br>\n        <h1\n          style={{\n            textAlign: \"center\",\n            fontFamily: \"satisfy\",\n            fontSize: \"3em\",\n            fontWeight: \"700\",\n          }}\n        >\n          Checkout\n        </h1>\n\n        <Container\n          className={classes.root}\n          component=\"main\"\n          maxWidth=\"s\"\n          style={{\n            width: \"80%\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#FBFBFD\",\n            marginBottom: \"2rem\",\n          }}\n        >\n          <form\n            noValidate\n            autoComplete=\"off\"\n            className={classes.form}\n            //   onSubmit={completeOrder}\n          >\n            <div className={classes.center}>\n              <div className={classes.billing}>\n                <Typography className={classes.header}>\n                  Billing Information\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"First Name\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Last Name\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Address Line 1\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Address Line 2\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Postal/Zip Code\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"City\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Province/State\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Country\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div className={classes.creditcard}>\n                <svg\n                  style={{ marginLeft: \"1rem\" }}\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  height=\"40\"\n                  viewBox=\"0 0 24 24\"\n                  width=\"40\"\n                >\n                  {/* <Typography className={classes.header}>Card Info</Typography>{\" \"} */}\n                  <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z\" />\n                </svg>\n                <Grid container spacing={2}>\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Card Number\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    ></TextField>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      type=\"text\"\n                      placeholder=\"Name\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Valid Thru\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"CVC\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n                <div className={classes.btn}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={completeOrder}\n                    style={{\n                      padding: \"1rem\",\n                      marginLeft: \"2rem\",\n                      backgroundColor: \"#7395ae\",\n                    }}\n                  >\n                    COMPLETE ORDER\n                  </Button>\n                </div>\n              </div>\n            </div>\n\n            <div className={classes.grid}>\n              <div className={classes.shipping}>\n                <Typography className={classes.header}>\n                  Shipping Information\n                </Typography>\n                {/* <Checkbox\n                onChange={() => {\n                  if (same) {\n                    setSame(false);\n                  } else {\n                    setSame(true);\n                  }\n                }}\n                inputProps={{ \"aria-label\": \"controlled\" }}\n              /> */}\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"First Name\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Last Name\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Address Line 1\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      placeholder=\"Address Line 2\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Postal/Zip Code\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"City\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Province/State\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      placeholder=\"Country\"\n                      variant=\"outlined\"\n                      fullWidth\n                      size=\"small\"\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n            </div>\n          </form>\n        </Container>\n        <br></br>\n      </div>\n    </>\n  );\n}\n\nexport default CheckoutForm;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/CheckoutRedirect.js",["194","195","196","197","198","199","200","201"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport baseUrl from \"../api\";\n\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport img from \"../components/media/library3.jpeg\";\n\nconst theme = createTheme();\n\nconst CheckoutRedirect = (props) => {\n  const token = props.token;\n  const setToken = props.setToken;\n  const setIsLoggedIn = props.setIsLoggedIn;\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  //===================================================================\n\n  const loginSubmit = async (e) => {\n    e.preventDefault();\n    setErrorMessage(\"\");\n\n    const response = await fetch(`${baseUrl}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n      }),\n    });\n    const info = await response.json();\n\n    if (info.error) {\n      console.log(info.error);\n      return setErrorMessage(info.error);\n    }\n    localStorage.setItem(\"token\", info.token);\n\n    setIsLoggedIn(true);\n    setToken(info.token);\n    history.push(\"/cart\");\n  };\n\n  //===================================================================\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${img})`,\n        backgroundRepeat: \"repeat\",\n        minHeight: \"84vh\",\n        height: \"100%\",\n        zIndex: \"-2\",\n        // marginTop: \"-3em\",\n        height: \"100vh\",\n        fontFamily: \"Nunito\",\n      }}\n    >\n      <br></br>\n      <ThemeProvider theme={theme}>\n        <Container\n          component=\"main\"\n          maxWidth=\"s\"\n          style={{\n            width: \"60%\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#FBFBFD\",\n            paddingBottom: \"2em\",\n          }}\n        >\n          <CssBaseline />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              style={{\n                fontSize: \"1.5em\",\n                marginTop: \"1em\",\n              }}\n            >\n              Registered Customers:\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={loginSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                variant=\"standard\"\n                margin=\"normal\"\n                required\n                fullWidth\n                lassName=\"login-input\"\n                placeholder=\"Enter email\"\n                minLength={6}\n                type=\"text\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                // style={{ backgroundColor: 'white' }}\n              />\n              <TextField\n                variant=\"standard\"\n                margin=\"normal\"\n                required\n                fullWidth\n                className=\"login-input\"\n                type=\"password\"\n                min={8}\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                // style={{ backgroundColor: 'white' }}\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                style={{\n                  backgroundColor: \"#7395ae\",\n                }}\n              >\n                Login\n              </Button>\n              <p className=\"errorMessage\">{errorMessage}</p>\n            </Box>\n          </Box>\n        </Container>\n        <br></br>\n        <Container\n          component=\"main\"\n          maxWidth=\"s\"\n          style={{\n            width: \"60%\",\n            borderRadius: \"10px\",\n            backgroundColor: \"#FBFBFD\",\n            margingTop: \"2em\",\n          }}\n        >\n          <CssBaseline />\n          <Box\n            sx={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography\n              component=\"h1\"\n              variant=\"h5\"\n              style={{\n                fontSize: \"1.2em\",\n                margin: \"1em\",\n              }}\n            >\n              New Customers:\n            </Typography>\n            <Box>\n              <Typography>Click here to create a new account</Typography>\n              <Button\n                type=\"submit\"\n                fullWidth\n                onClick={() => {\n                  history.push(\"/register\");\n                }}\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                style={{ backgroundColor: \"#7395ae\" }}\n              >\n                Register\n              </Button>\n            </Box>\n            <Box\n              component=\"form\"\n              onSubmit={loginSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <p className=\"errorMessage\">{errorMessage}</p>\n            </Box>\n          </Box>\n        </Container>\n        <br></br>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default CheckoutRedirect;\n","/Users/davidmathews/Desktop/FULLSTACK ACADEMY/Projects/course_work/graceshopper/newamazon/src/components/UpdateProductForm.js",[],{"ruleId":"202","severity":1,"message":"203","line":7,"column":10,"nodeType":"204","messageId":"205","endLine":7,"endColumn":24},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"202","severity":1,"message":"210","line":5,"column":26,"nodeType":"204","messageId":"205","endLine":5,"endColumn":31},{"ruleId":"202","severity":1,"message":"211","line":5,"column":33,"nodeType":"204","messageId":"205","endLine":5,"endColumn":38},{"ruleId":"202","severity":1,"message":"212","line":22,"column":8,"nodeType":"204","messageId":"205","endLine":22,"endColumn":11},{"ruleId":"202","severity":1,"message":"213","line":39,"column":12,"nodeType":"204","messageId":"205","endLine":39,"endColumn":21},{"ruleId":"214","severity":1,"message":"215","line":83,"column":6,"nodeType":"216","endLine":83,"endColumn":13,"suggestions":"217"},{"ruleId":"214","severity":1,"message":"218","line":129,"column":6,"nodeType":"216","endLine":129,"endColumn":12,"suggestions":"219"},{"ruleId":"214","severity":1,"message":"220","line":133,"column":13,"nodeType":"221","endLine":153,"endColumn":4},{"ruleId":"202","severity":1,"message":"222","line":148,"column":15,"nodeType":"204","messageId":"205","endLine":148,"endColumn":19},{"ruleId":"214","severity":1,"message":"223","line":153,"column":6,"nodeType":"216","endLine":153,"endColumn":15,"suggestions":"224"},{"ruleId":"202","severity":1,"message":"225","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":16},{"ruleId":"202","severity":1,"message":"226","line":13,"column":10,"nodeType":"204","messageId":"205","endLine":13,"endColumn":20},{"ruleId":"202","severity":1,"message":"227","line":21,"column":9,"nodeType":"204","messageId":"205","endLine":21,"endColumn":25},{"ruleId":"202","severity":1,"message":"228","line":28,"column":9,"nodeType":"204","messageId":"205","endLine":28,"endColumn":30},{"ruleId":"202","severity":1,"message":"229","line":32,"column":9,"nodeType":"204","messageId":"205","endLine":32,"endColumn":30},{"ruleId":"230","severity":1,"message":"231","line":66,"column":15,"nodeType":"232","endLine":73,"endColumn":16},{"ruleId":"202","severity":1,"message":"233","line":4,"column":3,"nodeType":"204","messageId":"205","endLine":4,"endColumn":12},{"ruleId":"202","severity":1,"message":"234","line":19,"column":3,"nodeType":"204","messageId":"205","endLine":19,"endColumn":27},{"ruleId":"202","severity":1,"message":"235","line":20,"column":3,"nodeType":"204","messageId":"205","endLine":20,"endColumn":26},{"ruleId":"214","severity":1,"message":"236","line":129,"column":6,"nodeType":"216","endLine":129,"endColumn":22,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":145,"column":11,"nodeType":"240","messageId":"241","endLine":145,"endColumn":17},{"ruleId":"230","severity":1,"message":"231","line":190,"column":23,"nodeType":"232","endLine":193,"endColumn":25},{"ruleId":"202","severity":1,"message":"242","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"230","severity":1,"message":"231","line":13,"column":9,"nodeType":"232","endLine":16,"endColumn":10},{"ruleId":"214","severity":1,"message":"243","line":57,"column":6,"nodeType":"216","endLine":57,"endColumn":18,"suggestions":"244"},{"ruleId":"202","severity":1,"message":"245","line":70,"column":9,"nodeType":"204","messageId":"205","endLine":70,"endColumn":21},{"ruleId":"202","severity":1,"message":"246","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":12},{"ruleId":"202","severity":1,"message":"247","line":15,"column":23,"nodeType":"204","messageId":"205","endLine":15,"endColumn":36},{"ruleId":"202","severity":1,"message":"213","line":18,"column":10,"nodeType":"204","messageId":"205","endLine":18,"endColumn":19},{"ruleId":"202","severity":1,"message":"248","line":33,"column":7,"nodeType":"204","messageId":"205","endLine":33,"endColumn":12},{"ruleId":"202","severity":1,"message":"249","line":36,"column":9,"nodeType":"204","messageId":"205","endLine":36,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":82,"column":9,"nodeType":"240","messageId":"241","endLine":82,"endColumn":15},{"ruleId":"202","severity":1,"message":"213","line":17,"column":10,"nodeType":"204","messageId":"205","endLine":17,"endColumn":19},{"ruleId":"202","severity":1,"message":"249","line":35,"column":9,"nodeType":"204","messageId":"205","endLine":35,"endColumn":14},{"ruleId":"238","severity":1,"message":"239","line":85,"column":9,"nodeType":"240","messageId":"241","endLine":85,"endColumn":15},{"ruleId":"202","severity":1,"message":"250","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":9},{"ruleId":"202","severity":1,"message":"251","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":8},{"ruleId":"202","severity":1,"message":"252","line":29,"column":10,"nodeType":"204","messageId":"205","endLine":29,"endColumn":19},{"ruleId":"202","severity":1,"message":"253","line":29,"column":21,"nodeType":"204","messageId":"205","endLine":29,"endColumn":33},{"ruleId":"202","severity":1,"message":"254","line":30,"column":10,"nodeType":"204","messageId":"205","endLine":30,"endColumn":22},{"ruleId":"202","severity":1,"message":"255","line":30,"column":24,"nodeType":"204","messageId":"205","endLine":30,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":76,"column":23,"nodeType":"232","endLine":85,"endColumn":25},{"ruleId":"202","severity":1,"message":"242","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"202","severity":1,"message":"256","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":11},{"ruleId":"202","severity":1,"message":"257","line":3,"column":8,"nodeType":"204","messageId":"205","endLine":3,"endColumn":17},{"ruleId":"202","severity":1,"message":"258","line":7,"column":3,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"259","line":9,"column":3,"nodeType":"204","messageId":"205","endLine":9,"endColumn":13},{"ruleId":"202","severity":1,"message":"260","line":10,"column":3,"nodeType":"204","messageId":"205","endLine":10,"endColumn":8},{"ruleId":"202","severity":1,"message":"261","line":20,"column":3,"nodeType":"204","messageId":"205","endLine":20,"endColumn":18},{"ruleId":"238","severity":1,"message":"262","line":191,"column":15,"nodeType":"240","messageId":"241","endLine":191,"endColumn":27},{"ruleId":"202","severity":1,"message":"242","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":14},{"ruleId":"202","severity":1,"message":"263","line":5,"column":3,"nodeType":"204","messageId":"205","endLine":5,"endColumn":7},{"ruleId":"202","severity":1,"message":"264","line":6,"column":3,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"265","line":7,"column":3,"nodeType":"204","messageId":"205","endLine":7,"endColumn":14},{"ruleId":"202","severity":1,"message":"233","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":12},{"ruleId":"202","severity":1,"message":"226","line":9,"column":3,"nodeType":"204","messageId":"205","endLine":9,"endColumn":13},{"ruleId":"202","severity":1,"message":"203","line":14,"column":24,"nodeType":"204","messageId":"205","endLine":14,"endColumn":38},{"ruleId":"202","severity":1,"message":"254","line":22,"column":10,"nodeType":"204","messageId":"205","endLine":22,"endColumn":22},{"ruleId":"230","severity":1,"message":"231","line":127,"column":9,"nodeType":"232","endLine":134,"endColumn":10},{"ruleId":"202","severity":1,"message":"250","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":9},{"ruleId":"202","severity":1,"message":"251","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":8},{"ruleId":"202","severity":1,"message":"252","line":31,"column":10,"nodeType":"204","messageId":"205","endLine":31,"endColumn":19},{"ruleId":"202","severity":1,"message":"253","line":31,"column":21,"nodeType":"204","messageId":"205","endLine":31,"endColumn":33},{"ruleId":"202","severity":1,"message":"254","line":32,"column":10,"nodeType":"204","messageId":"205","endLine":32,"endColumn":22},{"ruleId":"202","severity":1,"message":"255","line":32,"column":24,"nodeType":"204","messageId":"205","endLine":32,"endColumn":39},{"ruleId":"266","severity":1,"message":"267","line":58,"column":18,"nodeType":"268","messageId":"269","endLine":58,"endColumn":26},{"ruleId":"206","replacedBy":"270"},{"ruleId":"208","replacedBy":"271"},{"ruleId":"202","severity":1,"message":"250","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":9},{"ruleId":"202","severity":1,"message":"251","line":8,"column":3,"nodeType":"204","messageId":"205","endLine":8,"endColumn":8},{"ruleId":"202","severity":1,"message":"252","line":26,"column":10,"nodeType":"204","messageId":"205","endLine":26,"endColumn":19},{"ruleId":"202","severity":1,"message":"253","line":26,"column":21,"nodeType":"204","messageId":"205","endLine":26,"endColumn":33},{"ruleId":"202","severity":1,"message":"254","line":27,"column":10,"nodeType":"204","messageId":"205","endLine":27,"endColumn":22},{"ruleId":"202","severity":1,"message":"255","line":27,"column":24,"nodeType":"204","messageId":"205","endLine":27,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":59,"column":23,"nodeType":"232","endLine":68,"endColumn":25},{"ruleId":"202","severity":1,"message":"263","line":3,"column":3,"nodeType":"204","messageId":"205","endLine":3,"endColumn":7},{"ruleId":"202","severity":1,"message":"272","line":4,"column":3,"nodeType":"204","messageId":"205","endLine":4,"endColumn":11},{"ruleId":"202","severity":1,"message":"251","line":7,"column":3,"nodeType":"204","messageId":"205","endLine":7,"endColumn":8},{"ruleId":"202","severity":1,"message":"273","line":55,"column":28,"nodeType":"204","messageId":"205","endLine":55,"endColumn":47},{"ruleId":"202","severity":1,"message":"274","line":56,"column":28,"nodeType":"204","messageId":"205","endLine":56,"endColumn":47},{"ruleId":"202","severity":1,"message":"275","line":57,"column":30,"nodeType":"204","messageId":"205","endLine":57,"endColumn":51},{"ruleId":"202","severity":1,"message":"276","line":58,"column":31,"nodeType":"204","messageId":"205","endLine":58,"endColumn":53},{"ruleId":"202","severity":1,"message":"277","line":59,"column":22,"nodeType":"204","messageId":"205","endLine":59,"endColumn":35},{"ruleId":"202","severity":1,"message":"278","line":60,"column":23,"nodeType":"204","messageId":"205","endLine":60,"endColumn":37},{"ruleId":"202","severity":1,"message":"279","line":61,"column":24,"nodeType":"204","messageId":"205","endLine":61,"endColumn":39},{"ruleId":"202","severity":1,"message":"280","line":62,"column":26,"nodeType":"204","messageId":"205","endLine":62,"endColumn":43},{"ruleId":"202","severity":1,"message":"281","line":64,"column":16,"nodeType":"204","messageId":"205","endLine":64,"endColumn":23},{"ruleId":"202","severity":1,"message":"282","line":65,"column":10,"nodeType":"204","messageId":"205","endLine":65,"endColumn":27},{"ruleId":"202","severity":1,"message":"283","line":66,"column":10,"nodeType":"204","messageId":"205","endLine":66,"endColumn":27},{"ruleId":"202","severity":1,"message":"284","line":67,"column":10,"nodeType":"204","messageId":"205","endLine":67,"endColumn":29},{"ruleId":"202","severity":1,"message":"285","line":68,"column":10,"nodeType":"204","messageId":"205","endLine":68,"endColumn":30},{"ruleId":"202","severity":1,"message":"286","line":69,"column":10,"nodeType":"204","messageId":"205","endLine":69,"endColumn":21},{"ruleId":"202","severity":1,"message":"287","line":70,"column":10,"nodeType":"204","messageId":"205","endLine":70,"endColumn":22},{"ruleId":"202","severity":1,"message":"288","line":71,"column":10,"nodeType":"204","messageId":"205","endLine":71,"endColumn":23},{"ruleId":"202","severity":1,"message":"289","line":72,"column":10,"nodeType":"204","messageId":"205","endLine":72,"endColumn":25},{"ruleId":"202","severity":1,"message":"222","line":89,"column":11,"nodeType":"204","messageId":"205","endLine":89,"endColumn":15},{"ruleId":"202","severity":1,"message":"290","line":94,"column":9,"nodeType":"204","messageId":"205","endLine":94,"endColumn":23},{"ruleId":"238","severity":1,"message":"239","line":117,"column":11,"nodeType":"240","messageId":"241","endLine":117,"endColumn":17},{"ruleId":"202","severity":1,"message":"242","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":14},{"ruleId":"202","severity":1,"message":"291","line":6,"column":8,"nodeType":"204","messageId":"205","endLine":6,"endColumn":14},{"ruleId":"202","severity":1,"message":"246","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":12},{"ruleId":"202","severity":1,"message":"292","line":12,"column":8,"nodeType":"204","messageId":"205","endLine":12,"endColumn":24},{"ruleId":"202","severity":1,"message":"249","line":21,"column":9,"nodeType":"204","messageId":"205","endLine":21,"endColumn":14},{"ruleId":"202","severity":1,"message":"293","line":27,"column":10,"nodeType":"204","messageId":"205","endLine":27,"endColumn":18},{"ruleId":"202","severity":1,"message":"294","line":27,"column":20,"nodeType":"204","messageId":"205","endLine":27,"endColumn":31},{"ruleId":"238","severity":1,"message":"239","line":71,"column":9,"nodeType":"240","messageId":"241","endLine":71,"endColumn":15},"no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","no-native-reassign",["295"],"no-negated-in-lhs",["296"],"'toast' is defined but never used.","'Slide' is defined but never used.","'img' is defined but never used.","'Copyright' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["297"],"React Hook useEffect has missing dependencies: 'cart' and 'getMyCart'. Either include them or remove the dependency array.",["298"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'info' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMyCart' and 'token'. Either include them or remove the dependency array.",["299"],"'MenuItem' is defined but never used.","'Typography' is defined but never used.","'isMobileMenuOpen' is assigned a value but never used.","'handleProfileMenuOpen' is assigned a value but never used.","'handleMobileMenuClose' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'CardMedia' is defined but never used.","'SettingsOverscanOutlined' is defined but never used.","'SettingsOverscanTwoTone' is defined but never used.","React Hook useEffect has a missing dependency: 'updateProductInCart'. Either include it or remove the dependency array.",["300"],"no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'getMyOrders'. Either include it or remove the dependency array.",["301"],"'invoiceTotal' is assigned a value but never used.","'Grid' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is assigned a value but never used.","'token' is assigned a value but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","'productId' is assigned a value but never used.","'setProductId' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'CssBaseline' is defined but never used.","'IconButton' is defined but never used.","'Input' is defined but never used.","'TablePagination' is defined but never used.","Duplicate key 'marginBottom'.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","no-self-assign","'words[i]' is assigned to itself.","MemberExpression","selfAssignment",["295"],["296"],"'Checkbox' is defined but never used.","'setBillingFirstName' is assigned a value but never used.","'setBillingLasttName' is assigned a value but never used.","'setBillingAddresLine1' is assigned a value but never used.","'setBillingAddressLine2' is assigned a value but never used.","'setBillingZip' is assigned a value but never used.","'setBillingCity' is assigned a value but never used.","'setBillingState' is assigned a value but never used.","'setBillingCountry' is assigned a value but never used.","'setSame' is assigned a value but never used.","'shippingFirstName' is assigned a value but never used.","'shippingLasttName' is assigned a value but never used.","'shippingAddresLine1' is assigned a value but never used.","'shippingAddressLine2' is assigned a value but never used.","'shippingZip' is assigned a value but never used.","'shippingCity' is assigned a value but never used.","'shippingState' is assigned a value but never used.","'shippingCountry' is assigned a value but never used.","'sameAsShipping' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'newEmail' is assigned a value but never used.","'setNewEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},"Update the dependencies array to be: [getUser, token]",{"range":"312","text":"313"},"Update the dependencies array to be: [cart, getMyCart, user]",{"range":"314","text":"315"},"Update the dependencies array to be: [cart.id, getMyCart, token]",{"range":"316","text":"317"},"Update the dependencies array to be: [updateProductInCart, updatedProduct]",{"range":"318","text":"319"},"Update the dependencies array to be: [getMyOrders, props.user]",{"range":"320","text":"321"},[2592,2599],"[getUser, token]",[3748,3754],"[cart, getMyCart, user]",[4525,4534],"[cart.id, getMyCart, token]",[3258,3274],"[updateProductInCart, updatedProduct]",[1109,1121],"[getMyOrders, props.user]"]